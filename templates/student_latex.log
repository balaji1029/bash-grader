This is pdfTeX, Version 3.141592653-2.6-1.40.22 (TeX Live 2022/dev/Debian) (preloaded format=pdflatex 2024.4.3)  27 APR 2024 21:09
entering extended mode
 restricted \write18 enabled.
 file:line:error style messages enabled.
 %&-line parsing enabled.
**/home/balaji/Desktop/bash_grader/templates/student_latex.tex
(/home/balaji/Desktop/bash_grader/templates/student_latex.tex
LaTeX2e <2021-11-15> patch level 1
L3 programming layer <2022-01-21> (/usr/share/texlive/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(/usr/share/texlive/texmf-dist/tex/latex/base/size10.clo
File: size10.clo 2021/10/04 v1.4n Standard LaTeX file (size option)
)
\c@part=\count185
\c@section=\count186
\c@subsection=\count187
\c@subsubsection=\count188
\c@paragraph=\count189
\c@subparagraph=\count190
\c@figure=\count191
\c@table=\count192
\abovecaptionskip=\skip47
\belowcaptionskip=\skip48
\bibindent=\dimen138
) (/usr/share/texlive/texmf-dist/tex/latex/l3backend/l3backend-pdftex.def
File: l3backend-pdftex.def 2022-01-12 L3 backend support: PDF output (pdfTeX)
\l__color_backend_stack_int=\count193
\l__pdf_internal_box=\box50
) (./student_latex.aux)
\openout1 = `student_latex.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 7.
LaTeX Font Info:    ... okay on input line 7.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 7.
LaTeX Font Info:    ... okay on input line 7.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 7.
LaTeX Font Info:    ... okay on input line 7.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 7.
LaTeX Font Info:    ... okay on input line 7.
LaTeX Font Info:    Checking defaults for TS1/cmr/m/n on input line 7.
LaTeX Font Info:    ... okay on input line 7.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 7.
LaTeX Font Info:    ... okay on input line 7.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 7.
LaTeX Font Info:    ... okay on input line 7.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <24.88> on input line 11.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <20.74> on input line 11.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <17.28> on input line 11.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <12> on input line 11.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <8> on input line 11.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <6> on input line 11.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <7> on input line 18.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <5> on input line 18.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:19: Use of \@array doesn't match its definition.
\hline ...lewidth \futurelet \reserved@a \@xhline 
                                                  
l.19         \hline
                   
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:19: Use of \@array doesn't match its definition.
<argument> \edef \reserved@a {
                              \reserved@a x}\advance \@tempcnta \m@ne 
l.19         \hline
                   
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:19: Use of \@array doesn't match its definition.
<argument> \edef \reserved@a {\reserved@a x
                                           }\advance \@tempcnta \m@ne 
l.19         \hline
                   
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

Runaway argument?
\noalign {\hrule height\arrayrulewidth \futurelet }\@tempcnta 0\relax \ETC.
/home/balaji/Desktop/bash_grader/templates/student_latex.tex:19: Paragraph ended before \reserved@b was complete.
<to be read again> 
                   \par 
l.19         \hline
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:20: Misplaced alignment tab character &.
l.20         \textbf{Quiz} &
                             \rule[-0.5cm]{0pt}{1cm} \textbf{Score} \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:21: Misplaced \cr.
\reserved@c ->\ifnum 0=`{\fi }\cr 
                                  
l.21         \hline
                   
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:21: Misplaced \noalign.
\hline ->\noalign 
                  {\ifnum 0=`}\fi \hrule \@height \arrayrulewidth \futurelet...
l.21         \hline
                   
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:28: Misplaced \noalign.
\hline ->\noalign 
                  {\ifnum 0=`}\fi \hrule \@height \arrayrulewidth \futurelet...
l.28         \hline
                   
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:29: Misplaced \crcr.
\endtabular ->\crcr 
                    \egroup \egroup $\egroup 
l.29     \end{tabular}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:29: Extra }, or forgotten $.
\endtabular ->\crcr \egroup \egroup 
                                    $\egroup 
l.29     \end{tabular}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:55: Use of \@array doesn't match its definition.
\hline ...lewidth \futurelet \reserved@a \@xhline 
                                                  
l.55         \hline
                   
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:55: Use of \@array doesn't match its definition.
<argument> \edef \reserved@a {
                              \reserved@a x}\advance \@tempcnta \m@ne 
l.55         \hline
                   
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:55: Use of \@array doesn't match its definition.
<argument> \edef \reserved@a {\reserved@a x
                                           }\advance \@tempcnta \m@ne 
l.55         \hline
                   
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

Runaway argument?
\noalign {\hrule height\arrayrulewidth \futurelet }\@tempcnta 0\relax \ETC.
/home/balaji/Desktop/bash_grader/templates/student_latex.tex:55: Paragraph ended before \reserved@b was complete.
<to be read again> 
                   \par 
l.55         \hline
                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:56: Misplaced alignment tab character &.
l.56         \textbf{GRADE} &
                              \rule[-0.5cm]{0pt}{1.2cm} \textbf{\Large $4$} \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <14.4> on input line 56.
/home/balaji/Desktop/bash_grader/templates/student_latex.tex:57: Misplaced \cr.
\reserved@c ->\ifnum 0=`{\fi }\cr 
                                  
l.57         \hline
                   
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:57: Misplaced \noalign.
\hline ->\noalign 
                  {\ifnum 0=`}\fi \hrule \@height \arrayrulewidth \futurelet...
l.57         \hline
                   
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:58: Misplaced \crcr.
\endtabular ->\crcr 
                    \egroup \egroup $\egroup 
l.58     \end{tabular}
                      
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:58: Extra }, or forgotten $.
\endtabular ->\crcr \egroup \egroup 
                                    $\egroup 
l.58     \end{tabular}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

/home/balaji/Desktop/bash_grader/templates/student_latex.tex:60: Missing number, treated as zero.
<to be read again> 
                   \hfil 
l.60 \end{document}
                   
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

[1

{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map}] (./student_latex.aux) ) 
Here is how much of TeX's memory you used:
 443 strings out of 480247
 8164 string characters out of 5896152
 294597 words of memory out of 5000000
 18457 multiletter control sequences out of 15000+600000
 476265 words of font info for 51 fonts, out of 8000000 for 9000
 14 hyphenation exceptions out of 8191
 34i,5n,38p,185b,248s stack positions out of 5000i,500n,10000p,200000b,80000s
</usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmbx10.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmbx12.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmr10.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmr12.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmr17.pfb>
Output written on student_latex.pdf (1 page, 48816 bytes).
PDF statistics:
 33 PDF objects out of 1000 (max. 8388607)
 19 compressed objects within 1 object stream
 0 named destinations out of 1000 (max. 500000)
 1 words of extra memory for PDF output out of 10000 (max. 10000000)

